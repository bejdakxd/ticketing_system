Purpose of the project "ticket_system" is to demonstrate my programming abilities on potential job interviews.

1. Resolved status archives ticket 3 days after resolving -- done
2. When ticket is in resolved status, no field other than status can be changed -- done
3. Refactor ticket field duplication (controller and view) -- done
4. Refactor entire code, so that we can have a good feeling from it -- done
5. Solve submit problem, nothing is currently being submitted - done
6. Dynamic field graying out -- done
7. Solve validation errors not displaying in fields -- done
8. Items -- done
9. Resolver group support -- done
10. On hold status needs reason -- done
11. Priority 1 can be added only by user with the necessary permission -- done
12. Activities -- done
13. SLAs -- done
14. Implement Requests -- done
15. Implement multiple tasks support for requests -- done
16. E-mail notification on Incident and Request when opened to caller -- done
17. Resolver required_if Status in_progress -- done
18. Comment required_if Status resolved -- done
19. Resolver Panel -- done
20. Configuration items
21. Table filters
22. Knowledge articles for common problems
23. Change templates
24. Subcategories
25. Make TicketEditForm be synchronized in real time between browsers
26. Send e-mail, when Ticket SLA is before expiration
27. Statistics

Use case problems:
- Priority 1 is shown even if user has no permission to set priority one
- Comment on EditForms required even if status is already on hold, and it was not changed to on hold at all.. we need to required the comment only if the status was changed
- Very long descriptions span tables to unlimited width
- Table component is not horizontally scrollable

Refactor Ideas:
- change TicketTrait to separate traits
- Table class is too big, in 2 months we will not know what is going on there

