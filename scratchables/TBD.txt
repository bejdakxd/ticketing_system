Purpose of the project "ticket_system" is to demonstrate my programming abilities on potential job interviews.

1. Resolved status archives ticket 3 days after resolving -- done
2. When ticket is in resolved status, no field other than status can be changed -- done
3. Refactor ticket field duplication (controller and view) -- done
4. Refactor entire code, so that we can have a good feeling from it -- done
5. Solve submit problem, nothing is currently being submitted - done
6. Dynamic field graying out -- done
7. Solve validation errors not displaying in fields -- done
8. Items -- done
9. Resolver group support -- done
10. On hold status needs reason -- done
11. Priority 1 can be added only by user with the necessary permission -- done
12. Activities -- done
13. SLAs -- done
14. Implement Requests -- done

15. Implement multiple tasks support for requests

-- build TaskEditForm -- done
-- integrate list of tasks to the bottom of RequestEditForm
-- make Task model have a Morphs Taskable relationship instead of having Request relationship
-- make sure all Interfaces are really necessary

16. E-mail notification on ticket update
17. Watch list for tickets
18. Statistics
19. Resolver dashboard
20. Knowledge articles for common problems
21. Change templates
22. Subcategories
23. Resolver required_if Status in_progress
24. Make TicketEditForm be synchronized in real time between browsers
25. Send e-mail, when Ticket SLA is before expiration

Refactor ideas:
- modify for example category.name field name to Category on pipe level
- adding new activity type to the system is cumbersome, too many places to manage.. (view, controller, permissions, policies)
- Category-Item pairing is disgusting.. please find a better solution
- i noticed there is a lot of duplication on all EditForms so far.. investigate if it is possible to remove the duplication
- toIterable function can be replaced by making objects Iterable by themselves
- find a way to share varaibles between livewire/blade components without specifying them (< :represented-model=$request /> for instance)
- implement a universal EditForm, which will accept a Ticket model, and it'll render fields based on specification on Model level

Design ideas:
- make SLA bar always show at least a little bit of red color to indicate, that colors represent time left
- make tasks table have rounded corners on Tasks component

Bugs:

- OnHoldReason validation error not audible if reason is empty


